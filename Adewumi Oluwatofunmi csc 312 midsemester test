#include <iostream>
#include <cstdlib>

using namespace std;

struct stacks {
    float* data;
    int top;
    int size;
};

void push(stacks* s, float value) {
    if (s->top == s->size - 1) {
        s->size *= 2;
        s->data = (float*)realloc(s->data, s->size * sizeof(float));
    }
    s->top++;
    s->data[s->top] = value;
}

int main() {
    stacks s;
    s.top = -1;
    s.size = 1;
    s.data = (float*)malloc(s.size * sizeof(float));

    push(&s, 3.14);
    push(&s, 2.71);

    cout << "Stack contents: ";
    for (int i = 0; i <= s.top; i++) {
        cout << s.data[i] << " ";
    }
    cout << endl;
return o;
}




Number 2:WRITE A PROCEDURE IN C OR ANY OTHER PROGRAMMING LANGUAGE THAT SCANS A STRING SUPPLIED BY A USER AND DETERMINE WHETHER THE STRING SUPPLIED BY A USER AND DETERMINE WHETHER THE STRING IS A PALINDROME OR NOT 
NO 2...solution
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 50
int top = -1, front = 0;
int stack[MAX];
void push(char);
void pop();
void main()
{
 int i, choice;
 char s[MAX], b;
 while (1)
 {
 printf("1-enter string\n2-exit\n");
 printf("enter your choice\n");
 scanf("%d", &choice);
 switch (choice)
 {
 case 1:
 printf("Enter the String\n");
 scanf("%s", s);
 for (i = 0;s[i] != '\0';i++)
 {
 b = s[i];
 push(b);
 }
 for (i = 0;i < (strlen(s) / 2);i++)
 {
 if (stack[top] == stack[front])
 {
 pop();
front++;
return 0
}
